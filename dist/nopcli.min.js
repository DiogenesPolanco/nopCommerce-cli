#! /usr/bin/env node
import e from"yargs";import{getInstalledPath as t}from"get-installed-path";import a from"shelljs";import n from"fs";import s from"cli-progress";class i{static getPath(){return t("nopcli")}static getGroupAlias(){return{alias:"group",type:"string",default:"Widgets",describe:"support Widgets, Payments, DiscountRules, Shipping and Misc"}}static getVersionAlias(){return{alias:"version",type:"number",default:430,describe:'Only support ["4.20", "4.30", "4.40", "4.50"]'}}static getPluginAlias(){return{alias:"plugin",type:"string"}}static getClearAlias(){return{alias:"clear",type:"boolean",default:!1}}static getDescriptionNewCommand(){return"create plugin -[g] -[p] -[v] -[c]"}static getDescriptionBuildCommand(){return"build plugin -[g] -[p]"}static getDescriptionDemand(){return"please choose a valid command"}}class r{static printHandler(e,t){let n=e,s=t;n?void 0===n.code?a.echo(`${n}\n`):a.echo(`${n.code}: ${n.message}\n`):void 0===s.message?a.echo(`${s}\n`):a.echo(`${s.message}\n`)}}let l;l={"001":{message:'The plugin: "{{nopCli}}" already exists!',code:"001"},"002":{message:'The plugin: "{{nopCli}}" was created successfully!',code:"002"},"003":{message:"There was an error while building the plugin, please check and try again!",code:"003"},"004":{message:"Plugin build was successful!",code:"004"},"005":{message:"There was an error while getting the path value, please check and try again!",code:"005"},"006":{message:'Creating the plugin: "{{nopCli}}", Please Wait...',code:"006"}};class c{getSrcPluginName(e){return`Nop.Plugin.${e.g}.NopCliGeneric`}getOutPluginName(e){return`Nop.Plugin.${e.g}.${e.p}`}getFullSrcPlugin(e){return`${this.getSrcSolutionPath()}/Plugins/${this.getOutPluginName(e)}`}getSrcSolutionPath(){return n.existsSync("Plugins")?".":"src"}async validateVersion(e){let t=this.getSrcSolutionPath();return await n.existsSync(`${t}/Libraries/Nop.Services/Plugins/Samples/uploadedItems.json`)&&n.readFile(`${t}/Libraries/Nop.Services/Plugins/Samples/uploadedItems.json`,"utf8",((t,a)=>{if(t)throw t;let n=JSON.parse(a.replace(new RegExp("//(.*)","g"),""));e=n[3].SupportedVersion})),e}async getSrcVersion(e){let t=void 0!==e.v&&420!==e.v?450===e.v?440:e.v:430;return await this.validateVersion(t)}getOutProjectPathPluginName(e){return`${this.getFullSrcPlugin(e)}/${this.getOutPluginName(e)}.csproj`}async existOutProjectAsync(e){let t=this;return new Promise((async(a,s)=>{let i=t.getOutProjectPathPluginName(e);void 0===i?s(l["005"]):a(await n.existsSync(i))}))}async copyFiles(e,t){let s=this;return new Promise((async i=>{let r=s.getFullSrcPlugin(t),l=s.getSrcPluginName(t),c=s.getOutPluginName(t);a.mkdir("-p",`${r}`),a.cp("-R",`${e}/src/nopCommerce-${await s.getSrcVersion(t)}/${l}/`,r),a.mv(`${r}/${l}.csproj`,`${r}/${c}.csproj`),await n.readFileSync(`${e}/src/assets/images/logos/logo.png`,(function(e,t){e?i(!1):n.writeFile(`${r}/logos.png`,t,"base64",(function(e){e&&i(!1)}))})),i(!0)}))}async replaceContentFiles(e){let t=this;return new Promise((async s=>{let i=t.getFullSrcPlugin(e),r=a.find(`${i}`);if(r.length>0){for(const t of r)n.lstat(t,((n,s)=>{if(s.isFile()){let n=t.replace("NopCliGeneric",e.p);a.sed("-i",/NopCliGeneric/g,e.p,t),n!==t&&a.mv(`${t}`,`${n}`)}}));s(!0)}else s(!1)}))}async addSolution(e){let t=this;return new Promise((async(i,c)=>{await n.existsSync(`${t.getSrcSolutionPath()}/NopCommerce.sln`)?(r.printHandler(null,l["006"].message.replace("{{nopCli}}",t.getOutPluginName(e))),a.config.silent=!0,class{static waitProgress(e=s.Presets.shades_classic,t=0,n=100,i=10){let r=this,l=new s.Bar({format:"progress [{bar}] {percentage}% | {value}/{total}"},e);return l.start(n,0),new Promise((e=>{const n=setInterval((()=>{t++,l.update(t),t>=l.getTotal()&&(clearInterval(n),l.stop(),a.echo(""),e(r))}),i)}))}}.waitProgress().then((()=>{a.cd(t.getSrcSolutionPath()),a.exec(`dotnet sln add ./Plugins/${t.getOutPluginName(e)}`),i(l["002"].message.replace("{{nopCli}}",t.getOutPluginName(e)))}))):c(l["001"].message.replace("{{nopCli}}",t.getOutPluginName(e)))}))}async clearPlugin(e){let t=this;return new Promise((async(n,s)=>{t.existOutProjectAsync(e).then((s=>{s&&a.rm("-r",t.getFullSrcPlugin(e)),n(s)})).catch((e=>{s(e)}))}))}async createProjectAsync(e,t){let a=this;return new Promise((async(n,s)=>{await a.copyFiles(t,e).then((async t=>{t?await a.replaceContentFiles(e).then((async t=>{t?a.addSolution(e).then((async e=>{n(e)})).catch((e=>{s(e)})):s(l["001"].message.replace("{{nopCli}}",a.getOutPluginName(e)))})).catch((e=>{s(e)})):s(l["001"].message.replace("{{nopCli}}",a.getOutPluginName(e)))})).catch((e=>{s(e)}))}))}async TryToCreate(e,t){let a=this;return new Promise((async(n,s)=>{a.createProjectAsync(e,t).then((e=>{n(e)})).catch((()=>{a.clearPlugin(e).then((t=>{n(l[t?"002":"001"].message.replace("{{nopCli}}",a.getOutPluginName(e)))})).catch((e=>{s(e)}))}))}))}async CreateAsync(e,t){let a=this;return new Promise((async(n,s)=>{a.existOutProjectAsync(e.argv).then((async i=>{!1===i?a.TryToCreate(e.argv,t).then((e=>{n(e)})).catch((e=>{s(e)})):e.argv.c?a.clearPlugin(e.argv).then((i=>{a.TryToCreate(e.argv,t,i).then((e=>{n(e)})).catch((e=>{s(e)}))})):s(l["001"].message.replace("{{nopCli}}",a.getOutPluginName(e.argv)))})).catch((e=>{s(e)}))}))}async Build(e){let t=this;return new Promise((async(n,s)=>{await t.existOutProjectAsync(e.argv)?(a.cd(t.getSrcPluginName(e.argv)),a.exec(`dotnet build ${t.getOutPluginName(e.argv)}.csproj`),n(l["003"])):s(l["004"])}))}}let{build:o,create:g}=new class{async create(e){return i.getPath().then((async t=>{await(new c).CreateAsync(e,t).then((e=>{r.printHandler(null,e)})).catch((e=>{r.printHandler(e,null)}))}))}async build(e){return i.getPath().then((async t=>{await(new c).Build(e,t).then((e=>{r.printHandler(null,e)})).catch((e=>{r.printHandler(e,null)}))}))}};e.usage("$0 command").option("g",i.getGroupAlias()).option("p",i.getPluginAlias()).option("v",i.getVersionAlias()).option("c",i.getClearAlias()).command("new",i.getDescriptionNewCommand(),(e=>g(e))).command("build",i.getDescriptionBuildCommand(),(e=>o(e))).demand(1,i.getDescriptionDemand()).showHelpOnFail(!0).help("h").alias("h","help").argv;
