#! /usr/bin/env node
import e from"yargs";import{getInstalledPath as t}from"get-installed-path";import i from"inquirer";import n from"fs";import a from"shelljs";import r from"cli-progress";class s{static getPath(){return new Promise((e=>{t("nopcli").then((t=>{e(void 0===t?t:".")})).catch((()=>{e(".")}))}))}static getGroupAlias(){return{alias:"group",type:"string",default:"Widgets",describe:"support Widgets, Payments, DiscountRules, Shipping and Misc"}}static getVersionAlias(){return{alias:"version",type:"number",default:430,describe:'Only support ["4.20", "4.30", "4.40", "4.50"]'}}static getPluginAlias(){return{alias:"plugin",type:"string"}}static getClearAlias(){return{alias:"clear",type:"boolean",default:!1}}static getBuildAlias(){return{alias:"build",type:"boolean",default:!1}}static getInitAlias(){return{alias:"init",type:"boolean",default:!1}}static getDescriptionConfigCommand(){return"config plugin -[g] -[p] -[v] -[c] -[b]"}static getDescriptionNewCommand(){return"create plugin -[g] -[p] -[v] -[c] -[b]"}static getDescriptionBuildCommand(){return"build plugin -[g] -[p]"}static getDescriptionInitCommand(){return"init plugin -[g] -[p] -[v] -[b]"}static getDescriptionDemand(){return"please choose a valid command"}static getCloneNopDefaultCommand(){return"git clone https://github.com/nopSolutions/nopCommerce.git ./ --branch release-4.30 --depth 1"}static getGitNopCommercePath(){return"./.git"}static getDotNetAlias(){return{alias:"dotnet",type:"boolean",default:!1}}static getGitAlias(){return{alias:"git",type:"boolean",default:!1}}static getClientSettingFileName(){return".nopcli"}static getConfigPluginQuestions(){return[{type:"list",name:"group",message:"What plugin group do you want to have by default?",choices:["DiscountRoles","Misc","Payments","Shipping","Widgets",new i.Separator,"Ask for help",{name:"Contact support",disabled:"Unavailable at this time"},"Leave"]},{type:"list",name:"version",message:"What version of nopCommerce do you need?",choices:["4.20","4.30","4.40","4.50"],filter:e=>e.replace(".","")},{type:"input",name:"name",message:"What name do you want to use by default?",filter:e=>e.toLowerCase(),validate(e){const t=e.match(/[a-zA-Z]+/g);return!(""===e||!t)||"String- Please enter a default name for your plugins"}},{type:"input",name:"author",message:"What author do you want to use by default?",default:"NopCli team",validate(e){const t=e.match(/[a-zA-Z]+/g);return!(""===e||!t)||"String- Please enter a default author for your plugins"}},{type:"confirm",name:"toBeAutoClear",message:"Do you want to remove your plugins if they exist when trying to create?",default:!1},{type:"confirm",name:"toBeAutoBuild",message:"Do you want to build after creating the plugins?",default:!1},{type:"confirm",name:"toBeIniCore",message:"do you want to install dotnet core?",default:!1},{type:"confirm",name:"toBeIniNop",message:"do you want to clone nopcommerce?",default:!1},{type:"confirm",name:"toBeIniGit",message:"do you want to init git?",default:!1}]}static getSetting(e){let t=this;e=n.existsSync(`${e}/${t.getClientSettingFileName()}`)?`${e}/${t.getClientSettingFileName()}`:`${e}/src/${t.getClientSettingFileName()}`;let i=n.readFileSync(e);return JSON.parse(i)}static Prepare(e,t){let i=this.getSetting(e);return t.p=t.p??i.name,t.g=t.g??i.group,t.v=t.v??i.version,t.a=t.a??i.author,t.c=t.c??i.toBeAutoClear,t.b=t.b??i.toBeAutoBuild,t.i=t.i??i.toBeIniNop,t.git=t.i??i.toBeIniGit,t}}class o{static printHandler(e,t,i){let n=e,r=t;n?void 0===n.code?a.echo(`${n}\n`):a.echo(`${n.code}: ${n.message}\n`):void 0===r.message?a.echo(`${r}\n`):a.echo(`${r.message}\n`),i&&a.exit(i)}}let l;l={"001":{message:'The plugin: "{{nopCli}}" already exists!',code:"001"},"002":{message:'The plugin: "{{nopCli}}" was created successfully!',code:"002"},"003":{message:"There was an error while building the plugin, please check and try again!",code:"003"},"004":{message:"Plugin build was successful!",code:"004"},"005":{message:"There was an error while getting the path value, please check and try again!",code:"005"},"006":{message:'Creating the plugin: "{{nopCli}}", Please Wait...',code:"006"},"007":{message:"Setting Plugins was successful!",code:"007"},"008":{message:"Init was successful!",code:"008"}};class c{static waitProgress(e=r.Presets.shades_classic,t=0,i=100,n=10){let s=this,o=new r.Bar({format:"progress [{bar}] {percentage}%"},e);return o.start(i,0),new Promise((e=>{const i=setInterval((()=>{t++,o.update(t),t>=o.getTotal()&&(clearInterval(i),o.stop(),a.echo(""),e(s))}),n)}))}static waitInfinityProgress(e,t=!0,i=!1,n=r.Presets.rect,s=0,o=100,l=500){a.config.silent=t;let c=new r.Bar({clearOnComplete:i,format:"progress [{bar}]"},r.Presets.rect);c.start(o,s),e(c);const g=setInterval((function(){s++,c.update(s),s===o&&(o*=2,c.setTotal(o)),s>=c.getTotal()&&clearInterval(g)}),l)}static SetCompleted(e,t){e.setTotal(100),e.update(100),e.stop(),t()}}const g=new class{getSrcPluginName(e){return`Nop.Plugin.${e.g}.NopCliGeneric`}getOutPluginName(e){return`Nop.Plugin.${e.g}.${e.p}`}getFullSrcPlugin(e){return`${this.getSrcSolutionPath()}/Plugins/${this.getOutPluginName(e)}`}getSrcSolutionPath(){return n.existsSync("Plugins")?".":"./src"}validateVersion(e){let t=this.getSrcSolutionPath();return n.existsSync(`${t}/Libraries/Nop.Services/Plugins/Samples/uploadedItems.json`)&&n.readFile(`${t}/Libraries/Nop.Services/Plugins/Samples/uploadedItems.json`,"utf8",((t,i)=>{if(t)throw t;let n=JSON.parse(i.replace(new RegExp("//(.*)","g"),""));e=n[3].SupportedVersion})),e}getSrcVersion(e){let t=void 0!==e.v&&420!==e.v?450===e.v?440:e.v:430;return this.validateVersion(t)}getOutProjectPathPluginName(e){return`${this.getFullSrcPlugin(e)}/${this.getOutPluginName(e)}.csproj`}existOutProject(e){let t=this;return new Promise(((i,a)=>{let r=t.getOutProjectPathPluginName(e);void 0===r?a(l["005"]):i(n.existsSync(r))}))}copyFiles(e,t){let i=this;return new Promise((r=>{let s=i.getFullSrcPlugin(t),o=i.getSrcPluginName(t),l=i.getOutPluginName(t);a.mkdir("-p",`${s}`),a.cp("-R",`${e}/src/nopCommerce-${i.getSrcVersion(t)}/${o}/`,s),a.mv(`${s}/${o}.csproj`,`${s}/${l}.csproj`),n.readFileSync(`${e}/src/assets/images/logos/logo.png`,(function(e,t){e?r(!1):n.writeFileSync(`${s}/logo.png`,t,"base64")})),r(!0)}))}replaceContentFiles(e){let t=this;return new Promise((i=>{let r=t.getFullSrcPlugin(e),s=a.find(`${r}`);if(s.length>0)for(const t of s)n.lstat(t,((i,n)=>{if(n.isFile()){let i=t.replace("NopCliGeneric",e.p);a.sed("-i",/NopCliGeneric/g,e.p,t),i!==t&&a.mv(`${t}`,`${i}`)}}));i(s.length>0)}))}addSolution(e){let t=this;return new Promise(((i,r)=>{n.existsSync(`${t.getSrcSolutionPath()}/NopCommerce.sln`)?(o.printHandler(null,l["006"].message.replace("{{nopCli}}",t.getOutPluginName(e))),c.waitProgress().then((()=>{a.cd(t.getSrcSolutionPath()),a.exec(`dotnet sln add ./Plugins/${t.getOutPluginName(e)}`),i(l["002"].message.replace("{{nopCli}}",t.getOutPluginName(e)))}))):r(l["001"].message.replace("{{nopCli}}",t.getOutPluginName(e)))}))}clearPlugin(e){let t=this;return new Promise(((i,n)=>{t.existOutProject(e).then((n=>{n&&a.rm("-r",t.getFullSrcPlugin(e)),i(n)})).catch((e=>{n(e)}))}))}createProject(e,t){let i=this;return new Promise(((n,a)=>{i.copyFiles(t,e).then((t=>{t?i.replaceContentFiles(e).then((t=>{t?i.addSolution(e).then((e=>{n(e)})).catch((e=>{a(e)})):a(l["001"].message.replace("{{nopCli}}",i.getOutPluginName(e)))})).catch((e=>{a(e)})):a(l["001"].message.replace("{{nopCli}}",i.getOutPluginName(e)))})).catch((e=>{a(e)}))}))}TryToCreate(e,t){let i=this;return new Promise(((n,a)=>{i.createProject(e,t).then((e=>{n(e)})).catch((()=>{i.clearPlugin(e).then((t=>{n(l[t?"002":"001"].message.replace("{{nopCli}}",i.getOutPluginName(e)))})).catch((e=>{a(e)}))}))}))}Create(e,t){let i=this;return new Promise(((n,a)=>{i.existOutProject(e).then((r=>{!1===r?i.TryToCreate(e,t).then((e=>{n(e)})).catch((e=>{a(e)})):e.c?i.clearPlugin(e).then((r=>{i.TryToCreate(e,t,r).then((e=>{n(e)})).catch((e=>{a(e)}))})):a(l["001"].message.replace("{{nopCli}}",i.getOutPluginName(e)))})).catch((e=>{a(e)}))}))}clone(e){return new Promise(((t,i)=>{a.which("git")?c.waitInfinityProgress((n=>{a.exec(s.getCloneNopDefaultCommand(),(function(r,o,g){c.SetCompleted(n,(()=>{g?i(g):e.git?(a.rm("-r",s.getGitNopCommercePath()),a.exec("git init && git add *.*",(function(e,n,a){a?i(a):t(l["008"])}))):t(l["008"])}))}))})):(t("Sorry, this script requires git"),a.exit(1))}))}Build(e){let t=this;return new Promise(((i,n)=>{t.existOutProject(e).then((r=>{r?(a.cd(t.getSrcPluginName(e)),a.exec(`dotnet build ${t.getOutPluginName(e)}.csproj`),i(l["003"])):n(l["004"])}))}))}Init(e,t){let i=this;return new Promise(((n,a)=>{i.clone(e).then((a=>{e.p?i.createProject(e,t).then((t=>{e.b?i.Build(e).then((e=>{n(e)})):n(t)})):n(a)})).catch((e=>{a(e)}))}))}};const u=new class{CreateSetting(e,t,i){n.writeFile(s.getClientSettingFileName(),JSON.stringify(e,null,"  "),{encoding:"utf8",flag:"w"},(e=>{e?t(e):i(l["007"])}))}async Init(){let e=this;return new Promise((async(t,n)=>{i.prompt(s.getConfigPluginQuestions()).then((i=>{c.waitInfinityProgress((a=>{c.SetCompleted(a,(()=>{e.CreateSetting(i,t,n)}))}))}))}))}};class p{static create(e){return s.getPath().then((t=>{g.Create(s.Prepare(t,e.argv),t).then((e=>{o.printHandler(null,e)})).catch((e=>{o.printHandler(e,null)}))}))}static build(e){return s.getPath().then((t=>{g.Build(s.Prepare(t,e.argv),t).then((e=>{o.printHandler(null,e)})).catch((e=>{o.printHandler(e,null)}))}))}static init(e){return s.getPath().then((t=>{g.Init(s.Prepare(t,e.argv),t).then((e=>{o.printHandler(null,e,!0)})).catch((e=>{o.printHandler(e,null,!0)}))}))}static config(e){return s.getPath().then((t=>{u.Init(s.Prepare(t,e.argv)).then((e=>{o.printHandler(null,e,!0)})).catch((e=>{o.printHandler(e,null,!0)}))}))}}e.usage("$0 command").option("g",s.getGroupAlias()).option("p",s.getPluginAlias()).option("v",s.getVersionAlias()).option("c",s.getClearAlias()).option("b",s.getBuildAlias()).option("i",s.getInitAlias()).option("d",s.getDotNetAlias()).option("git",s.getGitAlias()).command("config",s.getDescriptionConfigCommand(),(e=>p.config(e))).command("new",s.getDescriptionNewCommand(),(e=>p.create(e))).command("build",s.getDescriptionBuildCommand(),(e=>p.build(e))).command("init",s.getDescriptionInitCommand(),(e=>p.init(e))).demand(1,s.getDescriptionDemand()).showHelpOnFail(!0).help("h").alias("h","help").argv;
